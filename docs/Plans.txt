Crawling
Indexing of Posts

Topics of the Day
(Ranking)

One Article per Topic / Different articles
(Clustering)

Search for Articles

Topic developement over time

Topics per Country

######## Blacklist Idea ###############################################################
Blacklist for non article stuff: 
    Articles = Scan(t) - Scan(0)
    Articles = Scan(t) - Blacklist
    Blacklist = Everything in Scan(t -7 Tage) AND Scan(t)

######## Redis ########################################################################
    Hash: Key -> Key Value, Key Value ...
    Set: Key -> Value, Value, Value ... (unions, intersections, differences) (unsorted)
    OSet: Key -> Score Value, Score Value ...
    String: Key -> Value
    List: Key -> Value, Value, Value ... (sorted by insertion)
######################################################################################

######## Algorithm ################################################################
    #Insert EntireCurrentScan in db, retrieve sdiff with blacklist, add difference to blacklist and process the difference
    #delete CurrentScan

Blacklist: Set ("blacklist":source -> title, title, title, ...)        remove too old ones
CurrentScan: Set ("current":source -> title, title, title, ...)        to difference with blacklist

    #Got new articles from difference... update wordscount and RightNeighborRelation and WordsOnDay
    #Generate HottestWordsOnDay from WordsOnDay
    #Insert Articles and Update lastArticleID
    #Update WordsToArticles

WordCount: Hash ("WordCount:"word -> count)
TotalWordsCount: -> count

SortedSet "RightNeighborRelation:"word -> (count nextWord), (count nextWord), ...
SortedSet "SameHeadlineRelation:"date":"word -> (count otherWord), (count otherWord), ...

"WordOnDay":dayDate Set -> ("word" count), ("word", count)
"HottestWordsOnDay:"dayDate SortedSet -> (countIn24Hours word), (countIn24Hours word), ...

"article:"id Hash -> ("title" title), ("date" date), ("source" sourceId), ("url" url)
"LastArticleId": String -> id

"InvertedIndex:"Word Set -> id, id, id
################################################################################

################################# Serveable functions ##########################
HottestWords - CommonWords
Historic Hottestes words
History of Words popularity
Last Articles
Articles to Word
RightNeighborRelation -> HottestWords as Sequences if likely
SameHeadlineRelation -> HottestWords as Topic collection -> Type word, get asociations
History of associations to word